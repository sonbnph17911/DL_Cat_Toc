/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package SWING;

import DAO.HoaDonDAO;
import DAO.LichDatDAO;
import DAO.ThongKeDAO;
import MODEL.HoaDon;
import MODEL.LichDat;
import java.awt.BorderLayout;
import java.awt.Color;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.DefaultComboBoxModel;
import javax.swing.table.DefaultTableModel;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.category.DefaultCategoryDataset;

/**
 *
 * @author DuongNVPH
 */
public class ThongKePanel extends javax.swing.JPanel {

    /**
     * Creates new form ThongKePanel
     */
    public ThongKePanel() {
        initComponents();
        init();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        pnlThongKe = new javax.swing.JPanel();
        pnlTienGiam = new javax.swing.JPanel();
        pnlTongTien = new javax.swing.JPanel();
        cbbNam = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();

        pnlThongKe.setLayout(new java.awt.BorderLayout());
        jTabbedPane1.addTab("Thống kê doanh thu", pnlThongKe);

        pnlTienGiam.setLayout(new java.awt.BorderLayout());
        jTabbedPane1.addTab("Thống kê tiền giảm", pnlTienGiam);

        pnlTongTien.setLayout(new java.awt.BorderLayout());
        jTabbedPane1.addTab("Thống kê tổng tiền", pnlTongTien);

        cbbNam.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbbNam.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbbNamActionPerformed(evt);
            }
        });

        jLabel1.setText("Ngày thanh toán :");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(cbbNam, javax.swing.GroupLayout.PREFERRED_SIZE, 363, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(858, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1340, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbbNam, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addContainerGap(539, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                    .addGap(0, 39, Short.MAX_VALUE)
                    .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 531, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void cbbNamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbbNamActionPerformed
        // TODO add your handling code here:
        int viTri = cbbNam.getSelectedIndex();
        if (viTri >= 0) {
            fillThongKeDoanhThu();
            fillThongKeGiamGia();
            fillThongKeTongTien();
        }
    }//GEN-LAST:event_cbbNamActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> cbbNam;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JPanel pnlThongKe;
    private javax.swing.JPanel pnlTienGiam;
    private javax.swing.JPanel pnlTongTien;
    // End of variables declaration//GEN-END:variables
    HoaDonDAO hddao = new HoaDonDAO();
    ThongKeDAO dao = new ThongKeDAO();
    void init(){
        fillCbbNam();
        fillThongKeDoanhThu();
        
    }
    
    void fillCbbNam(){
        DefaultComboBoxModel model = (DefaultComboBoxModel) cbbNam.getModel();
        model.removeAllElements();
        ArrayList<Date> list = hddao.selectYears();
        for (Date nam : list) {
            model.addElement(nam);
        }
    }
    
    void fillThongKeDoanhThu(){
        Date nam = (Date) cbbNam.getSelectedItem();
        ArrayList<Object[]> list = dao.getThongKeDoanhThu(nam);
        DefaultCategoryDataset barChartData = new DefaultCategoryDataset();
        for (Object[] row : list) {
            int hoaDon = (int) row[0];
            String doanhThu = String.format("%.0f", row[1]);
            barChartData.setValue(Double.parseDouble(doanhThu),"Số hóa đơn",String.valueOf(hoaDon));
            JFreeChart barChart = ChartFactory.createBarChart3D("Thống kê doanh thu", 
                    "Mã hóa đơn", "Tiền", 
                barChartData,PlotOrientation.VERTICAL,false,true,false);
        CategoryPlot barchrt = barChart.getCategoryPlot();
        barchrt.setRangeGridlinePaint(Color.GREEN);
        ChartPanel barPanel = new ChartPanel(barChart);
        pnlThongKe.removeAll();
        pnlThongKe.add(barPanel, BorderLayout.CENTER);
        pnlThongKe.validate();
        }
    }
    
    void fillThongKeGiamGia(){
        Date nam = (Date) cbbNam.getSelectedItem();
        ArrayList<Object[]> list = dao.getThongKeGiamGia(nam);
        DefaultCategoryDataset barChartData = new DefaultCategoryDataset();
        for (Object[] row : list) {
            int hoaDon = (int) row[0];
            String doanhThu = String.format("%.0f", row[1]);
            barChartData.setValue(Double.parseDouble(doanhThu),"Số hóa đơn",String.valueOf(hoaDon));
            JFreeChart barChart = ChartFactory.createBarChart3D("Thống kê giảm giá", 
                    "Mã hóa đơn", "Tiền", 
                barChartData,PlotOrientation.VERTICAL,false,true,false);
        CategoryPlot barchrt = barChart.getCategoryPlot();
        barchrt.setRangeGridlinePaint(Color.GREEN);
        ChartPanel barPanel = new ChartPanel(barChart);
        pnlTienGiam.removeAll();
        pnlTienGiam.add(barPanel, BorderLayout.CENTER);
        pnlTienGiam.validate();
        }
    }
    
    
    void fillThongKeTongTien(){
        Date nam = (Date) cbbNam.getSelectedItem();
        ArrayList<Object[]> list = dao.getThongKeTongTien(nam);
        DefaultCategoryDataset barChartData = new DefaultCategoryDataset();
        for (Object[] row : list) {
            int hoaDon = (int) row[0];
            String doanhThu = String.format("%.0f", row[1]);
            barChartData.setValue(Double.parseDouble(doanhThu),"Số hóa đơn",String.valueOf(hoaDon));
            JFreeChart barChart = ChartFactory.createBarChart3D("Thống kê tổng tiền", 
                    "Mã hóa đơn", "Tiền", 
                barChartData,PlotOrientation.VERTICAL,false,true,false);
        CategoryPlot barchrt = barChart.getCategoryPlot();
        barchrt.setRangeGridlinePaint(Color.GREEN);
        ChartPanel barPanel = new ChartPanel(barChart);
        pnlTongTien.removeAll();
        pnlTongTien.add(barPanel, BorderLayout.CENTER);
        pnlTongTien.validate();
        }
    }

}
