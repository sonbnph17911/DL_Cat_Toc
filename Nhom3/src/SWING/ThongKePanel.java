/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package SWING;

import DAO.ChiTietHoaDonDAO;
import DAO.HoaDonDAO;
import DAO.LichDatDAO;
import DAO.ThongKeDAO;
import MODEL.ChiTietHoaDon;
import MODEL.HoaDon;
import MODEL.LichDat;
import java.awt.BorderLayout;
import java.awt.Color;
import java.text.DecimalFormat;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.DefaultComboBoxModel;
import javax.swing.table.DefaultTableModel;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.category.DefaultCategoryDataset;

/**
 *
 * @author DuongNVPH
 */
public class ThongKePanel extends javax.swing.JPanel {

    /**
     * Creates new form ThongKePanel
     */
    public ThongKePanel() {
        initComponents();
        init();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        pnlThongKe = new javax.swing.JPanel();
        pnlTienGiam = new javax.swing.JPanel();
        pnlTongTien = new javax.swing.JPanel();
        cbbNam = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        lblDoanhThu = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        lblTongTien = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        lblGiamGia = new javax.swing.JLabel();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        pnlThongKe.setLayout(new java.awt.BorderLayout());
        jTabbedPane1.addTab("Thống kê doanh thu", pnlThongKe);

        pnlTienGiam.setLayout(new java.awt.BorderLayout());
        jTabbedPane1.addTab("Thống kê tiền giảm", pnlTienGiam);

        pnlTongTien.setLayout(new java.awt.BorderLayout());
        jTabbedPane1.addTab("Thống kê tổng tiền", pnlTongTien);

        add(jTabbedPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 79, 1340, 491));

        cbbNam.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbbNam.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbbNamActionPerformed(evt);
            }
        });
        add(cbbNam, new org.netbeans.lib.awtextra.AbsoluteConstraints(119, 21, 363, -1));

        jLabel1.setText("Ngày thanh toán :");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(13, 24, -1, -1));

        lblDoanhThu.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblDoanhThu.setForeground(new java.awt.Color(255, 0, 0));
        lblDoanhThu.setText("Tổng doanh thu :");
        add(lblDoanhThu, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 60, 330, 34));

        jSeparator1.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator1.setForeground(new java.awt.Color(0, 0, 0));
        jSeparator1.setAlignmentX(1.0F);
        jSeparator1.setAlignmentY(1.0F);
        add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 52, 460, 10));

        lblTongTien.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblTongTien.setForeground(new java.awt.Color(255, 0, 0));
        lblTongTien.setText("TỔNG TIỀN :");
        add(lblTongTien, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 20, -1, -1));

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 48)); // NOI18N
        jLabel3.setText("-");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(870, 20, 30, 20));

        lblGiamGia.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblGiamGia.setForeground(new java.awt.Color(255, 0, 0));
        lblGiamGia.setText("Giảm giá :");
        add(lblGiamGia, new org.netbeans.lib.awtextra.AbsoluteConstraints(910, 20, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void cbbNamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbbNamActionPerformed
        // TODO add your handling code here:
        int viTri = cbbNam.getSelectedIndex();
        if (viTri >= 0) {
            fillThongKeDoanhThu();
            fillThongKeGiamGia();
            fillThongKeTongTien();
            fillTongDoanhThu();
        }
    }//GEN-LAST:event_cbbNamActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> cbbNam;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JLabel lblDoanhThu;
    private javax.swing.JLabel lblGiamGia;
    private javax.swing.JLabel lblTongTien;
    private javax.swing.JPanel pnlThongKe;
    private javax.swing.JPanel pnlTienGiam;
    private javax.swing.JPanel pnlTongTien;
    // End of variables declaration//GEN-END:variables
    HoaDonDAO hddao = new HoaDonDAO();
    ThongKeDAO dao = new ThongKeDAO();
    void init(){
        fillCbbNam();
        fillThongKeDoanhThu();
        
    }
    
    void fillCbbNam(){
        DefaultComboBoxModel model = (DefaultComboBoxModel) cbbNam.getModel();
        model.removeAllElements();
        ArrayList<Date> list = hddao.selectYears();
        for (Date nam : list) {
            model.addElement(nam);
        }
    }
    void fillTongDoanhThu(){
        DecimalFormat dcf = new DecimalFormat("###,###,###");
        Date nam = (Date) cbbNam.getSelectedItem();
        ArrayList<ChiTietHoaDon> list = new ChiTietHoaDonDAO().tongDoanhThu(nam);
        int doanhthu = 0 ;
        int giamgia = 0 ;
        int tongtien = 0 ;
        for (int i = 0; i < list.size(); i++) {
            doanhthu += Integer.parseInt(String.format("%.0f", list.get(i).getThanhTien()));
            giamgia += Integer.parseInt(String.format("%.0f", list.get(i).getGiamGia()));
            tongtien += Integer.parseInt(String.format("%.0f", list.get(i).getTongTien()));
            lblDoanhThu.setText("Tổng doanh thu :"+dcf.format(doanhthu)+"VND");
            lblGiamGia.setText("Giảm giá :"+dcf.format(giamgia)+"VND");
            lblTongTien.setText("Tổng tiền :"+dcf.format(tongtien)+"VND");
        }
    }
    void fillThongKeDoanhThu(){
        Date nam = (Date) cbbNam.getSelectedItem();
        ArrayList<Object[]> list = dao.getThongKeDoanhThu(nam);
        DefaultCategoryDataset barChartData = new DefaultCategoryDataset();
        for (Object[] row : list) {
            int hoaDon = (int) row[0];
            String doanhThu = String.format("%.0f", row[1]);
            barChartData.setValue(Double.parseDouble(doanhThu),"Số hóa đơn",String.valueOf(hoaDon));
            JFreeChart barChart = ChartFactory.createBarChart3D("Thống kê doanh thu", 
                    "Mã hóa đơn", "Tiền", 
                barChartData,PlotOrientation.VERTICAL,false,true,false);
        CategoryPlot barchrt = barChart.getCategoryPlot();
        barchrt.setRangeGridlinePaint(Color.GREEN);
        ChartPanel barPanel = new ChartPanel(barChart);
        pnlThongKe.removeAll();
        pnlThongKe.add(barPanel, BorderLayout.CENTER);
        pnlThongKe.validate();
        }
    }
    
    void fillThongKeGiamGia(){
        Date nam = (Date) cbbNam.getSelectedItem();
        ArrayList<Object[]> list = dao.getThongKeGiamGia(nam);
        DefaultCategoryDataset barChartData = new DefaultCategoryDataset();
        for (Object[] row : list) {
            int hoaDon = (int) row[0];
            String doanhThu = String.format("%.0f", row[1]);
            barChartData.setValue(Double.parseDouble(doanhThu),"Số hóa đơn",String.valueOf(hoaDon));
            JFreeChart barChart = ChartFactory.createAreaChart("Thống kê giảm giá", 
                    "Mã hóa đơn", "Tiền", 
                barChartData,PlotOrientation.VERTICAL,false,true,false);
        CategoryPlot barchrt = barChart.getCategoryPlot();
        barchrt.setRangeGridlinePaint(Color.GREEN);
        ChartPanel barPanel = new ChartPanel(barChart);
        pnlTienGiam.removeAll();
        pnlTienGiam.add(barPanel, BorderLayout.CENTER);
        pnlTienGiam.validate();
        }
    }
    
    
    void fillThongKeTongTien(){
        Date nam = (Date) cbbNam.getSelectedItem();
        ArrayList<Object[]> list = dao.getThongKeTongTien(nam);
        DefaultCategoryDataset barChartData = new DefaultCategoryDataset();
        for (Object[] row : list) {
            int hoaDon = (int) row[0];
            String doanhThu = String.format("%.0f", row[1]);
            barChartData.setValue(Double.parseDouble(doanhThu),"Số hóa đơn",String.valueOf(hoaDon));
            JFreeChart barChart = ChartFactory.createWaterfallChart("Thống kê tổng tiền", 
                    "Mã hóa đơn", "Tiền", 
                barChartData,PlotOrientation.VERTICAL,false,true,false);
        CategoryPlot barchrt = barChart.getCategoryPlot();
        barchrt.setRangeGridlinePaint(Color.GREEN);
        ChartPanel barPanel = new ChartPanel(barChart);
        pnlTongTien.removeAll();
        pnlTongTien.add(barPanel, BorderLayout.CENTER);
        pnlTongTien.validate();
        }
    }

}
